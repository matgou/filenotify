# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build:
  stage: build
  before_script:
    - apt update && apt -y install make autoconf
  script:
    - libtoolize
    - sh -c "automake --add-missing; autoreconf; automake --add-missing;"
    - ./configure
    - make
    - make dist
  artifacts:
    paths:
      - filenotify-1.0.tar.gz
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  before_script:
    - apt update && apt -y install make autoconf valgrind
  script:
    - libtoolize
    - sh -c "automake --add-missing; autoreconf; automake --add-missing;"
    - ./configure
    - make
    - make check
  artifacts:
    paths:
      - tests/logtest/logtest.sh.log
      - tests/reload-test/reload-test.sh.log
      - tests/valgrindtest/valgrindtest.sh.log
      - tests/test-suite.log
    when: on_failure

